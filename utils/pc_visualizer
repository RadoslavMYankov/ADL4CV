import plotly.graph_objects as go
import numpy as np
import open3d as o3d

# Load point cloud (example for .ply)
pcd = o3d.io.read_point_cloud("/home/team5/project/outputs/alameda/pc/point_cloud_nerfacto_17_11.ply")
points = np.asarray(pcd.points)
step = 10
points = points[::step]

if pcd.is_empty():
    print("Point cloud is empty or failed to load.")
else:
    print("Point cloud loaded successfully!")
    print(f"Number of points: {len(pcd.points)}")

# Check if the point cloud has color information
if pcd.has_colors():
    print("Point cloud has color information")
    colors = np.asarray(pcd.colors)
    # Convert colors to a format Plotly can understand (0-255 range)
    colors = (colors * 255).astype(np.uint8)
    colors = ['rgb({},{},{})'.format(r, g, b) for r, g, b in colors]
else:
    # Default color if no color information is available
    colors = 'blue'

# Create an interactive 3D scatter plot
fig = go.Figure(data=[go.Scatter3d(
    x=points[:, 0],
    y=points[:, 1],
    z=points[:, 2],
    mode='markers',
    marker=dict(size=2, color=colors)
)])

# Save as HTML for local viewing
fig.write_html("alameda_pc_nerf_10.html")
print("Saved interactive visualization to 'alameda_pc_nerf.html'")